Parameters:
  Environment:
    Type: String
  VpcCIDR:
    Type: String
  PublicSubnetCIDRs:
    Type: CommaDelimitedList
  PrivateSubnetCIDRs:
    Type: CommaDelimitedList

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-VPC

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-IGW

  VPCIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PublicSubnetCIDRs]
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PUB-NET1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PublicSubnetCIDRs]
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PUB-NET2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PrivateSubnetCIDRs]
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PRI-NET1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PrivateSubnetCIDRs]
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-PRI-NET2

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: VPCIGWAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-NGW1-EIP

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: VPCIGWAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-NGW2-EIP

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt  NatGateway1EIP.AllocationId
      ConnectivityType: public
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-NGW1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt  NatGateway2EIP.AllocationId
      ConnectivityType: public
      SubnetId: !Ref PublicSubnet2
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-NGW2

# Public Route Table, it's routes and subnet(s) association
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-PUB-RT

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

# Private Subnet 1 Route Table, it's routes and subnet association
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-PRI-RT1

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

# Private Subnet 2 Route Table, it's routes and subnet association
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub ${Environment}-PRI-RT2

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2


Outputs:

  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub ${Environment}-VPC-ID

  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Environment}-PUB-NET1-ID

  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Environment}-PUB-NET2-ID

  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Environment}-PRI-NET1-ID

  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Environment}-PRI-NET2-ID

  PublicSubnetList:
    Value: !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${Environment}-PUB-NET-IDs

  PrivateSubnetList:
    Value: !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub ${Environment}-PRI-NET-IDs
