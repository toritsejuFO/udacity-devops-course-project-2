Description: >
  My implementation of Project 2 Cloud Devops Course.
  PS: Everything related to the jumpbox is commented,
  this is to allow for quickly debugging, as adding and removing
  the content wasn't optimal.

Parameters:
  Environment:
    Type: String
  AmiId:
    Type: String

##### JUMPBOX-COMMENT::START #####
# Uncomment the below in order to use with jumpbox, used in "ServerLaunchConfig" Resource
# Ensure to add parameters to the server-params json file before updating
##### JUMPBOX-COMMENT::END #####
  # PrivateServerKeyPair:
  #   Type: String
  # JumpboxSecGroupIngressCIDR:
  #   Type: String


Resources:
# Server-related config (security group, launch config and auto scaling group)
  ServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Environment}-VPC-ID
      GroupDescription: Security group for servers in autoscaling group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
##### JUMPBOX-COMMENT::START #####
# Uncomment the below to use with jumpbox
##### JUMPBOX-COMMENT::END #####
      # - IpProtocol: tcp
      #   FromPort: 22
      #   ToPort: 22
      #   CidrIp: 11.0.0.0/16 # Allow access only from machines within VPC CIDR
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0


  ServerLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref AmiId
      InstanceType: t3.medium
      SecurityGroups: [!Ref ServerSecGroup]
##### JUMPBOX-COMMENT::START #####
# Uncomment to use with jumpbox, for debugging purposes
##### JUMPBOX-COMMENT::END #####
      # KeyName: !Ref PrivateServerKeyPair
      BlockDeviceMappings:
      - DeviceName: /dev/sdh
        Ebs:
          VolumeSize: 10
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          sudo systemctl enable apache2.service
          cd /var/www/html
          echo "It works! Udagram, Udacity!" > index.html

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: ServerAutoScalingGroup
      MinSize: 4
      MaxSize: 8
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB
      LaunchConfigurationName: !Ref ServerLaunchConfig
      VPCZoneIdentifier:
      - Fn::ImportValue: !Sub ${Environment}-PRI-NET-IDs
      TargetGroupARNs: [!Ref SeverTargetGroup]

# Load balancer related config
  ALBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Environment}-VPC-ID
      GroupDescription: Security group for Load balancer
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${Environment}-ALB
      SecurityGroups: [!Ref ALBSecGroup]
      Subnets:
      - Fn::ImportValue: !Sub ${Environment}-PUB-NET1-ID
      - Fn::ImportValue: !Sub ${Environment}-PUB-NET2-ID

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Port: 80
      Protocol: HTTP
      LoadBalancerArn: !Ref ALB
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref SeverTargetGroup

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Priority: 1
      ListenerArn: !GetAtt ALBListener.ListenerArn
      Actions:
      - Type: forward
        TargetGroupArn: !Ref SeverTargetGroup
        Order: 1
      Conditions:
      - Field: path-pattern
        PathPatternConfig:
          Values: [/]

  SeverTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Environment}-VPC-ID
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP

##### JUMPBOX-COMMENT::START #####
# Jumpbox security group, kept here in order to export the ID for use in the jumpbox template
# Uncomment and run update in order to use with jumpbox template/stack
##### JUMPBOX-COMMENT::END #####

  # JumpboxSecGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     VpcId:
  #       Fn::ImportValue: !Sub ${Environment}-VPC-ID
  #     GroupDescription: Security group for jumpbox
  #     SecurityGroupIngress:
  #     - IpProtocol: tcp
  #       FromPort: 22
  #       ToPort: 22
  #       CidrIp: !Ref JumpboxSecGroupIngressCIDR
  #     SecurityGroupEgress:
  #     - IpProtocol: tcp
  #       FromPort: 0
  #       ToPort: 65535
  #       CidrIp: 0.0.0.0/0
  #     Tags:
  #     - Key: Name
  #       Value: jumpbox-SecGroup


Outputs:
  ALB:
    Value: !Join ['://', ['http', !GetAtt ALB.DNSName]]
    Export:
      Name: ALB-DNSName

##### JUMPBOX-COMMENT::START #####
# Uncomment to use with jumpbox
##### JUMPBOX-COMMENT::END #####
  # JumpboxSecGroup:
  #   Value: !Ref JumpboxSecGroup
  #   Export:
  #     Name: !Sub ${Environment}-JumpboxSecGroup-ID
